/*
 * Created on 8 Dec 2016 ( Time 09:59:33 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.id.wasta.business.service.mapper;

import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;

import com.id.wasta.bean.TIdVisitInformation;
import com.id.wasta.bean.jpa.TIdPersonalInformationEntitySearch;
import com.id.wasta.bean.jpa.TIdVisitInformationEntitySearch;

/**
 * Mapping between entity beans and display beans.
 */
@Component
public class TIdVisitInformationServiceMapper extends AbstractServiceMapper {

	/**
	 * ModelMapper : bean to bean mapping library.
	 */
	private ModelMapper modelMapper;
	
	/**
	 * Constructor.
	 */
	public TIdVisitInformationServiceMapper() {
		modelMapper = new ModelMapper();
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}

	/**
	 * Mapping from 'TIdVisitInformationEntity' to 'TIdVisitInformation'
	 * @param tIdVisitInformationEntity
	 */
	public TIdVisitInformation mapTIdVisitInformationEntitySearchToTIdVisitInformation(TIdVisitInformationEntitySearch tIdVisitInformationEntitySearch) {
		if(tIdVisitInformationEntitySearch == null) {
			return null;
		}

		//--- Generic mapping 
		TIdVisitInformation tIdVisitInformation = map(tIdVisitInformationEntitySearch, TIdVisitInformation.class);

		//--- Link mapping ( link to TIdPersonalInformation )
		if(tIdVisitInformationEntitySearch.getTIdPersonalInformation() != null) {
			tIdVisitInformation.setPivPinKey(tIdVisitInformationEntitySearch.getTIdPersonalInformation().getPinKey());
		}
		return tIdVisitInformation;
	}
	
	/**
	 * Mapping from 'TIdVisitInformation' to 'TIdVisitInformationEntity'
	 * @param tIdVisitInformation
	 * @param tIdVisitInformationEntity
	 */
	public void mapTIdVisitInformationToTIdVisitInformationEntitySearch(TIdVisitInformation tIdVisitInformation, TIdVisitInformationEntitySearch tIdVisitInformationEntitySearch) {
		if(tIdVisitInformation == null) {
			return;
		}

		//--- Generic mapping 
		map(tIdVisitInformation, tIdVisitInformationEntitySearch);

		//--- Link mapping ( link : tIdVisitInformation )
		if( hasLinkToTIdPersonalInformation(tIdVisitInformation) ) {
			TIdPersonalInformationEntitySearch tIdPersonalInformation1 = new TIdPersonalInformationEntitySearch();
			tIdPersonalInformation1.setPinKey( tIdVisitInformation.getPivPinKey() );
			tIdVisitInformationEntitySearch.setTIdPersonalInformation( tIdPersonalInformation1 );
		} else {
			tIdVisitInformationEntitySearch.setTIdPersonalInformation( null );
		}

	}
	
	/**
	 * Verify that TIdPersonalInformation id is valid.
	 * @param TIdPersonalInformation TIdPersonalInformation
	 * @return boolean
	 */
	private boolean hasLinkToTIdPersonalInformation(TIdVisitInformation tIdVisitInformation) {
		if(tIdVisitInformation.getPivPinKey() != null) {
			return true;
		}
		return false;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected ModelMapper getModelMapper() {
		return modelMapper;
	}

	protected void setModelMapper(ModelMapper modelMapper) {
		this.modelMapper = modelMapper;
	}

}