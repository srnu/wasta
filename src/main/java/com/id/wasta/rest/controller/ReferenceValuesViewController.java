/*
 * Created on 7 Nov 2016 ( Time 16:07:04 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.id.wasta.rest.controller;

import java.io.IOException;
import java.util.List;

import com.fasterxml.jackson.core.JsonParseException;
import com.fasterxml.jackson.databind.JsonMappingException;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.id.util.bean.common.JsonResponse;
import com.id.util.bean.common.SelectListBean;
import com.id.util.enums.MessageTypeEnum;
//--- Services 
import com.id.wasta.business.service.ReferenceValuesViewService;


/**
 * Spring MVC controller for 'ReferenceValuesView' management.
 */
@Controller
public class ReferenceValuesViewController {

	@Autowired
	private ReferenceValuesViewService referenceValuesViewService;
	
	@RequestMapping(value = "autosuggestion/referenceValues", method = RequestMethod.GET, produces = MediaType.APPLICATION_JSON_VALUE)
	@ResponseBody
	public JsonResponse getReferences(@RequestParam(value="searchString") String searchString, @RequestParam(value="domainName") String domainName, @RequestParam(value="profileKey") Long profileKey) throws JsonParseException, JsonMappingException, IOException {
		searchString=searchString+"%";
		List<SelectListBean> refList=referenceValuesViewService.getReferences(searchString,domainName,profileKey);
		if(refList.size()>0)
			return new JsonResponse(refList,MessageTypeEnum.SUCCESS.getValue(),"Ref values retrieved successfully","ref retrieved successfully",true);
		else
			return new JsonResponse(null,MessageTypeEnum.ERROR.getValue(),"ref.not.found","ref not available",false);
	}	
	
	@RequestMapping(value = "list/referenceValues", method = RequestMethod.GET, produces = MediaType.APPLICATION_JSON_VALUE)
	@ResponseBody
	public JsonResponse getReferences( @RequestParam(value="domainName") String domainName, @RequestParam(value="profileKey") Long profileKey) throws JsonParseException, JsonMappingException, IOException {
		
		List<SelectListBean> refList=referenceValuesViewService.getReferences(domainName,profileKey);
		if(refList.size()>0)
			return new JsonResponse(refList,MessageTypeEnum.SUCCESS.getValue(),"Ref values retrieved successfully","ref retrieved successfully",true);
		else
			return new JsonResponse(null,MessageTypeEnum.ERROR.getValue(),"ref.not.found","ref not available",false);
	}	
}
