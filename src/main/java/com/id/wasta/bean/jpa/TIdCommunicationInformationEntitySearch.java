
/*
 * Created on 4 Nov 2016 ( Time 12:24:10 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package com.id.wasta.bean.jpa;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;
import javax.persistence.Version;

import org.hibernate.search.annotations.Analyze;
import org.hibernate.search.annotations.Field;
import org.hibernate.search.annotations.Index;
import org.hibernate.search.annotations.Store;

import com.fasterxml.jackson.annotation.JsonInclude;

/**
 * Persistent class for entity stored in table "t_id_communication_information"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="t_id_communication_information")
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="TIdCommunicationInformationEntitySearch.countAll", query="SELECT COUNT(x) FROM TIdCommunicationInformationEntitySearch x" )
} )
@JsonInclude(JsonInclude.Include.NON_NULL)
public class TIdCommunicationInformationEntitySearch implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="pcm_key", nullable=false)
    private Long       pcmKey       ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    /*@Column(name="pcm_pin_key",nullable=false)
    private Long pcmPinKey;*/
  
    @Column(name="pcm_type", nullable=false, length=1)
		
     private String     pcmType      ;

    @Column(name="pcm_description", nullable=false, length=75)
    @Field(index=Index.YES, analyze=Analyze.YES, store=Store.NO)
     private String     pcmDescription ;

    @Column(name="active_status", nullable=false, length=75)
		
     private String     activeStatus ;

    @Column(name="lock_key", nullable=false)
				@Version
		
     private Long       lockKey      ;

    @Column(name="profile_key", nullable=false)
		
     private Long       profileKey   ;

    
    @ManyToOne
	@JoinColumn(name="pcm_pin_key", referencedColumnName="pin_key")
	private TIdPersonalInformationEntitySearch tIdPersonalInformation;
    
    
	// "pcmPinKey" (column "pcm_pin_key") is not defined by itself because used as FK in a link 


    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
   // @ManyToOne
    //@JoinColumn(name="pcm_pin_key", referencedColumnName="pin_key")
    //private TIdPersonalInformationEntity tIdPersonalInformation;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public TIdCommunicationInformationEntitySearch() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setPcmKey( Long pcmKey ) {
        this.pcmKey = pcmKey ;
    }
    public Long getPcmKey() {
        return this.pcmKey;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : pcm_type ( VARCHAR ) 
    public void setPcmType( String pcmType ) {
        this.pcmType = pcmType;
    }
    public String getPcmType() {
        return this.pcmType;
    }
    
//--DATABASE MAPPING : pcm_pin_key(Long)
   /* public Long getPcmPinKey() {
		return pcmPinKey;
	}

	public void setPcmPinKey(Long pcmPinKey) {
		this.pcmPinKey = pcmPinKey;
	}*/

	//--- DATABASE MAPPING : pcm_description ( VARCHAR ) 
    public void setPcmDescription( String pcmDescription ) {
        this.pcmDescription = pcmDescription;
    }
    public String getPcmDescription() {
        return this.pcmDescription;
    }

    //--- DATABASE MAPPING : active_status ( VARCHAR ) 
    public void setActiveStatus( String activeStatus ) {
        this.activeStatus = activeStatus;
    }
    public String getActiveStatus() {
        return this.activeStatus;
    }

    //--- DATABASE MAPPING : lock_key ( BIGINT ) 
    public void setLockKey( Long lockKey ) {
        this.lockKey = lockKey;
    }
    public Long getLockKey() {
        return this.lockKey;
    }

    //--- DATABASE MAPPING : profile_key ( BIGINT ) 
    public void setProfileKey( Long profileKey ) {
        this.profileKey = profileKey;
    }
    public Long getProfileKey() {
        return this.profileKey;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    /*public void setTIdPersonalInformation( TIdPersonalInformationEntity tIdPersonalInformation ) {
        this.tIdPersonalInformation = tIdPersonalInformation;
    }
    public TIdPersonalInformationEntity getTIdPersonalInformation() {
        return this.tIdPersonalInformation;
    }*/


    public TIdPersonalInformationEntitySearch getTIdPersonalInformation() {
		return tIdPersonalInformation;
	}

	public void setTIdPersonalInformation(
			TIdPersonalInformationEntitySearch tIdPersonalInformation) {
		this.tIdPersonalInformation = tIdPersonalInformation;
	}

	//----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(pcmKey);
        sb.append("]:"); 
        sb.append(pcmType);
        sb.append("|");
        sb.append(pcmDescription);
        sb.append("|");
        sb.append(activeStatus);
        sb.append("|");
        sb.append(lockKey);
        sb.append("|");
        sb.append(profileKey);
        return sb.toString(); 
    } 

}
