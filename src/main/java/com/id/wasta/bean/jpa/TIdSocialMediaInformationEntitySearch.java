
/*
 * Created on 1 Nov 2016 ( Time 10:40:35 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package com.id.wasta.bean.jpa;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;
import javax.persistence.Version;

import org.hibernate.search.annotations.Analyze;
import org.hibernate.search.annotations.Field;
import org.hibernate.search.annotations.Index;
import org.hibernate.search.annotations.Store;

import com.fasterxml.jackson.annotation.JsonInclude;

/**
 * Persistent class for entity stored in table "t_id_social_media_information"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="t_id_social_media_information")
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="TIdSocialMediaInformationEntitySearch.countAll", query="SELECT COUNT(x) FROM TIdSocialMediaInformationEntitySearch x" )
} )
@JsonInclude(JsonInclude.Include.NON_NULL)
public class TIdSocialMediaInformationEntitySearch implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="psm_key", nullable=false)
    private Long       psmKey       ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
   /* @Column(name="psm_pin_key", nullable=false)
		
     private Long       psmPinKey    ;*/

    @Column(name="psm_type", nullable=false, length=1)
		
     private String     psmType      ;

    @Column(name="psm_id", nullable=false, length=75)
    @Field(index=Index.YES, analyze=Analyze.YES, store=Store.NO)
     private String     psmId        ;

    @Column(name="lock_key", nullable=false)
				@Version
		
     private Long       lockKey      ;

    @Column(name="profile_key", nullable=false)
		
     private Long       profileKey   ;

    @Column(name="active_status", nullable=false, length=75)
		
     private String     activeStatus ;

    @ManyToOne
   	@JoinColumn(name="psm_pin_key", referencedColumnName="pin_key")
   	private TIdPersonalInformationEntitySearch tIdPersonalInformation;

    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------

    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public TIdSocialMediaInformationEntitySearch() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setPsmKey( Long psmKey ) {
        this.psmKey = psmKey ;
    }
    public Long getPsmKey() {
        return this.psmKey;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : psm_pin_key ( BIGINT ) 
    /*public void setPsmPinKey( Long psmPinKey ) {
        this.psmPinKey = psmPinKey;
    }
    public Long getPsmPinKey() {
        return this.psmPinKey;
    }*/

    //--- DATABASE MAPPING : psm_type ( VARCHAR ) 
    public void setPsmType( String psmType ) {
        this.psmType = psmType;
    }
    public String getPsmType() {
        return this.psmType;
    }

    //--- DATABASE MAPPING : psm_id ( VARCHAR ) 
    public void setPsmId( String psmId ) {
        this.psmId = psmId;
    }
    public String getPsmId() {
        return this.psmId;
    }

    //--- DATABASE MAPPING : lock_key ( BIGINT ) 
    public void setLockKey( Long lockKey ) {
        this.lockKey = lockKey;
    }
    public Long getLockKey() {
        return this.lockKey;
    }

    //--- DATABASE MAPPING : profile_key ( BIGINT ) 
    public void setProfileKey( Long profileKey ) {
        this.profileKey = profileKey;
    }
    public Long getProfileKey() {
        return this.profileKey;
    }

    //--- DATABASE MAPPING : active_status ( VARCHAR ) 
    public void setActiveStatus( String activeStatus ) {
        this.activeStatus = activeStatus;
    }
    public String getActiveStatus() {
        return this.activeStatus;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------

    public TIdPersonalInformationEntitySearch getTIdPersonalInformation() {
		return tIdPersonalInformation;
	}

	public void setTIdPersonalInformation(
			TIdPersonalInformationEntitySearch tIdPersonalInformation) {
		this.tIdPersonalInformation = tIdPersonalInformation;
	}

	//----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(psmKey);
        sb.append("]:"); 
        sb.append(psmType);
        sb.append("|");
        sb.append(psmId);
        sb.append("|");
        sb.append(lockKey);
        sb.append("|");
        sb.append(profileKey);
        sb.append("|");
        sb.append(activeStatus);
        return sb.toString(); 
    } 

}
