
/*
 * Created on 1 Nov 2016 ( Time 10:40:31 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package com.id.wasta.bean.jpa;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;
import javax.persistence.Version;

import com.fasterxml.jackson.annotation.JsonInclude;

/**
 * Persistent class for entity stored in table "t_id_dynamic_definition"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="t_id_dynamic_definition")
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="TIdDynamicDefinitionEntity.countAll", query="SELECT COUNT(x) FROM TIdDynamicDefinitionEntity x" )
} )
@JsonInclude(JsonInclude.Include.NON_NULL)
public class TIdDynamicDefinitionEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="add_key", nullable=false)
    private Long       addKey       ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="add_code", nullable=false, length=75)
		
     private String     addCode      ;

    @Column(name="add_description", nullable=false, length=240)
		
     private String     addDescription ;

    @Column(name="add_module_key", nullable=false)
		
     private Long       addModuleKey ;

    @Column(name="add_lov_sql", length=4000)
		
     private String     addLovSql    ;

    @Column(name="add_lov_sql_owner", length=240)
		
     private String     addLovSqlOwner ;

    @Column(name="add_prompt", nullable=false, length=240)
		
     private String     addPrompt    ;

    @Column(name="add_required", nullable=false, length=1)
		
     private String     addRequired  ;

    @Column(name="add_size", nullable=false)
		
     private Long       addSize      ;

    @Column(name="add_default_value", length=240)
		
     private String     addDefaultValue ;

    @Column(name="add_water_mark_text", length=240)
		
     private String     addWaterMarkText ;

    @Column(name="add_control_type", nullable=false, length=1)
		
     private String     addControlType ;

    @Column(name="lock_key", nullable=false)
				@Version
		
     private Long       lockKey      ;

    @Column(name="profile_key", nullable=false)
		
     private Long       profileKey   ;

    @Column(name="active_status", nullable=false, length=75)
		
     private String     activeStatus ;



    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------

    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public TIdDynamicDefinitionEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setAddKey( Long addKey ) {
        this.addKey = addKey ;
    }
    public Long getAddKey() {
        return this.addKey;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : add_code ( VARCHAR ) 
    public void setAddCode( String addCode ) {
        this.addCode = addCode;
    }
    public String getAddCode() {
        return this.addCode;
    }

    //--- DATABASE MAPPING : add_description ( VARCHAR ) 
    public void setAddDescription( String addDescription ) {
        this.addDescription = addDescription;
    }
    public String getAddDescription() {
        return this.addDescription;
    }

    //--- DATABASE MAPPING : add_module_key ( BIGINT ) 
    public void setAddModuleKey( Long addModuleKey ) {
        this.addModuleKey = addModuleKey;
    }
    public Long getAddModuleKey() {
        return this.addModuleKey;
    }

    //--- DATABASE MAPPING : add_lov_sql ( VARCHAR ) 
    public void setAddLovSql( String addLovSql ) {
        this.addLovSql = addLovSql;
    }
    public String getAddLovSql() {
        return this.addLovSql;
    }

    //--- DATABASE MAPPING : add_lov_sql_owner ( VARCHAR ) 
    public void setAddLovSqlOwner( String addLovSqlOwner ) {
        this.addLovSqlOwner = addLovSqlOwner;
    }
    public String getAddLovSqlOwner() {
        return this.addLovSqlOwner;
    }

    //--- DATABASE MAPPING : add_prompt ( VARCHAR ) 
    public void setAddPrompt( String addPrompt ) {
        this.addPrompt = addPrompt;
    }
    public String getAddPrompt() {
        return this.addPrompt;
    }

    //--- DATABASE MAPPING : add_required ( VARCHAR ) 
    public void setAddRequired( String addRequired ) {
        this.addRequired = addRequired;
    }
    public String getAddRequired() {
        return this.addRequired;
    }

    //--- DATABASE MAPPING : add_size ( BIGINT ) 
    public void setAddSize( Long addSize ) {
        this.addSize = addSize;
    }
    public Long getAddSize() {
        return this.addSize;
    }

    //--- DATABASE MAPPING : add_default_value ( VARCHAR ) 
    public void setAddDefaultValue( String addDefaultValue ) {
        this.addDefaultValue = addDefaultValue;
    }
    public String getAddDefaultValue() {
        return this.addDefaultValue;
    }

    //--- DATABASE MAPPING : add_water_mark_text ( VARCHAR ) 
    public void setAddWaterMarkText( String addWaterMarkText ) {
        this.addWaterMarkText = addWaterMarkText;
    }
    public String getAddWaterMarkText() {
        return this.addWaterMarkText;
    }

    //--- DATABASE MAPPING : add_control_type ( VARCHAR ) 
    public void setAddControlType( String addControlType ) {
        this.addControlType = addControlType;
    }
    public String getAddControlType() {
        return this.addControlType;
    }

    //--- DATABASE MAPPING : lock_key ( BIGINT ) 
    public void setLockKey( Long lockKey ) {
        this.lockKey = lockKey;
    }
    public Long getLockKey() {
        return this.lockKey;
    }

    //--- DATABASE MAPPING : profile_key ( BIGINT ) 
    public void setProfileKey( Long profileKey ) {
        this.profileKey = profileKey;
    }
    public Long getProfileKey() {
        return this.profileKey;
    }

    //--- DATABASE MAPPING : active_status ( VARCHAR ) 
    public void setActiveStatus( String activeStatus ) {
        this.activeStatus = activeStatus;
    }
    public String getActiveStatus() {
        return this.activeStatus;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------

    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(addKey);
        sb.append("]:"); 
        sb.append(addCode);
        sb.append("|");
        sb.append(addDescription);
        sb.append("|");
        sb.append(addModuleKey);
        sb.append("|");
        sb.append(addLovSql);
        sb.append("|");
        sb.append(addLovSqlOwner);
        sb.append("|");
        sb.append(addPrompt);
        sb.append("|");
        sb.append(addRequired);
        sb.append("|");
        sb.append(addSize);
        sb.append("|");
        sb.append(addDefaultValue);
        sb.append("|");
        sb.append(addWaterMarkText);
        sb.append("|");
        sb.append(addControlType);
        sb.append("|");
        sb.append(lockKey);
        sb.append("|");
        sb.append(profileKey);
        sb.append("|");
        sb.append(activeStatus);
        return sb.toString(); 
    } 

}
