
/*
 * Created on 1 Nov 2016 ( Time 10:40:37 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package com.id.wasta.bean.jpa;

import java.io.Serializable;
//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;
import java.util.Date;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.persistence.Version;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.id.util.data.repository.jpa.validators.constraints.Unique;
import com.id.wasta.util.action.CommonConstants;

/**
 * Persistent class for entity stored in table "t_id_user_master"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="t_id_user_master")
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="TIdUserMasterEntity.countAll", query="SELECT COUNT(x) FROM TIdUserMasterEntity x" )
} )
public class TIdUserMasterEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="user_key", nullable=false)
    private Long       userKey      ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="user_code", nullable=false, length=50)
		
     private String     userCode     ;

    @Column(name="user_first_name", length=75)
    @Unique(property = "userFirstName", tableName = "TIdUserMasterEntity", message="user.userFirstName.already.exists")
     private String     userFirstName ;

    @Column(name="user_middle_name", length=75)
		
     private String     userMiddleName ;

    @Temporal(TemporalType.DATE)
    @Column(name="user_date_of_birth", length=75)
    private Date     userDateOfBirth ;

    @Column(name="user_last_name", nullable=false, length=75)
		
     private String     userLastName ;

    @Column(name="user_display_name", length=240)
		
     private String     userDisplayName ;
    
    @Column(name="user_relationship_key")
	
    private Long       userRelationshipKey ;

    @Column(name="user_company_key")
		
     private Long       userCompanyKey ;
    
    @Column(name="user_verification_code")
	
    private Long       userVerificationCode ;

    @Column(name="user_address_link")
		
     private Long       userAddressLink ;

    @Column(name="user_default_profile_key", nullable=false)
		
     private Long       userDefaultProfileKey ;

    @Column(name="active_status", nullable=false)
		
     private Long       activeStatus ;
    
    @JsonFormat(shape=JsonFormat.Shape.STRING, pattern="yyyy-MM-dd'T'HH:mm:ss'Z'", timezone = CommonConstants.APP_TIME_ZONE)
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="user_active_from")
		
     private Date       userActiveFrom ;
    
    @JsonFormat(shape=JsonFormat.Shape.STRING, pattern="yyyy-MM-dd'T'HH:mm:ss'Z'", timezone = CommonConstants.APP_TIME_ZONE)
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="user_active_to")
		
     private Date       userActiveTo ;

    @Column(name="user_password", nullable=false, length=75)
		
     private String     userPassword ;

    @Column(name="user_pin_key", nullable=false)
		
     private Long       userPinKey   ;
   
    @Column(name="user_lock_count")
	
    private Long       userLockCount   ;
    
    @Column(name="profile_key", nullable=false)
		
     private Long       profileKey   ;

    @Column(name="lock_key", nullable=false)
	@Version
		
     private Long  lockKey      ;
    
    @Transient
    private Long customerPinKey;
    @Transient
    List<Long> custCategoryList;
    
    @Transient
    private String commPhone;
    
    @Transient
    private String commMobile;
    
    @Transient
    private String commEmail;
    
    @Transient
    private Long commCountryKey;
    
    @Transient
    private String commCountryName;
    
    @Transient
    private Long commStateKey;
    
    @Transient
    private String commStateName;
    
    @Transient
    private Long commCityKey;
    
    @Transient
    private String commCityName;
    
    @Transient
    private boolean adminRole = false;
   
   @JsonFormat(shape=JsonFormat.Shape.STRING, pattern="yyyy-MM-dd'T'HH:mm:ss'Z'", timezone = CommonConstants.APP_TIME_ZONE)
   @Temporal(TemporalType.TIMESTAMP)
   @Transient
   private Date lastLogoutTime;
    
   @Column(name="user_password_modified",length=2)
   private String userPasswordModified;
   
   @Column(name="on_behalf_of",length=20)
   private Long onBehalfOf;

    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------

    

	//----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public TIdUserMasterEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setUserKey( Long userKey ) {
        this.userKey = userKey ;
    }
    public Long getUserKey() {
        return this.userKey;
    }

    public Long getUserVerificationCode() {
		return userVerificationCode;
	}

	public void setUserVerificationCode(Long userVerificationCode) {
		this.userVerificationCode = userVerificationCode;
	}

	//----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : user_code ( VARCHAR ) 
    public void setUserCode( String userCode ) {
        this.userCode = userCode;
    }
    public String getUserCode() {
        return this.userCode;
    }
    
    public Date getUserDateOfBirth() {
		return userDateOfBirth;
	}

	public void setUserDateOfBirth(Date userDateOfBirth) {
		this.userDateOfBirth = userDateOfBirth;
	}

	//--- DATABASE MAPPING : user_first_name ( VARCHAR ) 
    public void setUserFirstName( String userFirstName ) {
        this.userFirstName = userFirstName;
    }
    public String getUserFirstName() {
        return this.userFirstName;
    }

    //--- DATABASE MAPPING : user_middle_name ( VARCHAR ) 
    public void setUserMiddleName( String userMiddleName ) {
        this.userMiddleName = userMiddleName;
    }
    public String getUserMiddleName() {
        return this.userMiddleName;
    }
    
    public Long getUserLockCount() {
		return userLockCount;
	}

	public void setUserLockCount(Long userLockCount) {
		this.userLockCount = userLockCount;
	}

	//--- DATABASE MAPPING : user_last_name ( VARCHAR ) 
    public void setUserLastName( String userLastName ) {
        this.userLastName = userLastName;
    }
    public String getUserLastName() {
        return this.userLastName;
    }

    //--- DATABASE MAPPING : user_display_name ( VARCHAR ) 
    public void setUserDisplayName( String userDisplayName ) {
        this.userDisplayName = userDisplayName;
    }
    public String getUserDisplayName() {
        return this.userDisplayName;
    }
    
    public Long getUserRelationshipKey() {
		return userRelationshipKey;
	}
	public void setUserRelationshipKey(Long userRelationshipKey) {
		this.userRelationshipKey = userRelationshipKey;
	}

	//--- DATABASE MAPPING : user_company_key ( BIGINT ) 
    public void setUserCompanyKey( Long userCompanyKey ) {
        this.userCompanyKey = userCompanyKey;
    }
    public Long getUserCompanyKey() {
        return this.userCompanyKey;
    }

    //--- DATABASE MAPPING : user_address_link ( BIGINT ) 
    public void setUserAddressLink( Long userAddressLink ) {
        this.userAddressLink = userAddressLink;
    }
    public Long getUserAddressLink() {
        return this.userAddressLink;
    }

    //--- DATABASE MAPPING : user_default_profile_key ( BIGINT ) 
    public void setUserDefaultProfileKey( Long userDefaultProfileKey ) {
        this.userDefaultProfileKey = userDefaultProfileKey;
    }
    public Long getUserDefaultProfileKey() {
        return this.userDefaultProfileKey;
    }

    //--- DATABASE MAPPING : active_status ( BIGINT ) 
    public void setActiveStatus( Long activeStatus ) {
        this.activeStatus = activeStatus;
    }
    public Long getActiveStatus() {
        return this.activeStatus;
    }

    //--- DATABASE MAPPING : user_active_from ( DATETIME ) 
    public void setUserActiveFrom( Date userActiveFrom ) {
        this.userActiveFrom = userActiveFrom;
    }
    public Date getUserActiveFrom() {
        return this.userActiveFrom;
    }

    //--- DATABASE MAPPING : user_active_to ( DATETIME ) 
    public void setUserActiveTo( Date userActiveTo ) {
        this.userActiveTo = userActiveTo;
    }
    public Date getUserActiveTo() {
        return this.userActiveTo;
    }

    //--- DATABASE MAPPING : user_password ( VARCHAR ) 
    public void setUserPassword( String userPassword ) {
        this.userPassword = userPassword;
    }
    public String getUserPassword() {
        return this.userPassword;
    }

    //--- DATABASE MAPPING : user_pin_key ( BIGINT ) 
    public void setUserPinKey( Long userPinKey ) {
        this.userPinKey = userPinKey;
    }
    public Long getUserPinKey() {
        return this.userPinKey;
    }

    //--- DATABASE MAPPING : profile_key ( BIGINT ) 
    public void setProfileKey( Long profileKey ) {
        this.profileKey = profileKey;
    }
    public Long getProfileKey() {
        return this.profileKey;
    }

    //--- DATABASE MAPPING : lock_key ( BIGINT ) 
    public void setLockKey( Long lockKey ) {
        this.lockKey = lockKey;
    }
    public Long getLockKey() {
        return this.lockKey;
    }
    

	public Long getCustomerPinKey() {
		return customerPinKey;
	}

	public void setCustomerPinKey(Long customerPinKey) {
		this.customerPinKey = customerPinKey;
	}
 
    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------

	public List<Long> getCustCategoryList() {
		return custCategoryList;
	}

	public void setCustCategoryList(List<Long> custCategoryList) {
		this.custCategoryList = custCategoryList;
	}

	public Date getLastLogoutTime() {
		return lastLogoutTime;
	}

	public void setLastLogoutTime(Date lastLogoutTime) {
		this.lastLogoutTime = lastLogoutTime;
	}
	
	

	public String getCommPhone() {
		return commPhone;
	}

	public void setCommPhone(String commPhone) {
		this.commPhone = commPhone;
	}

	public String getCommMobile() {
		return commMobile;
	}

	public void setCommMobile(String commMobile) {
		this.commMobile = commMobile;
	}

	public String getCommEmail() {
		return commEmail;
	}

	public void setCommEmail(String commEmail) {
		this.commEmail = commEmail;
	}

	public Long getCommCountryKey() {
		return commCountryKey;
	}

	public void setCommCountryKey(Long commCountryKey) {
		this.commCountryKey = commCountryKey;
	}

	public Long getCommStateKey() {
		return commStateKey;
	}

	public void setCommStateKey(Long commStateKey) {
		this.commStateKey = commStateKey;
	}

	public Long getCommCityKey() {
		return commCityKey;
	}

	public void setCommCityKey(Long commCityKey) {
		this.commCityKey = commCityKey;
	}
	
	public String getCommCountryName() {
		return commCountryName;
	}

	public void setCommCountryName(String commCountryName) {
		this.commCountryName = commCountryName;
	}

	public String getCommStateName() {
		return commStateName;
	}

	public void setCommStateName(String commStateName) {
		this.commStateName = commStateName;
	}

	public String getCommCityName() {
		return commCityName;
	}

	public void setCommCityName(String commCityName) {
		this.commCityName = commCityName;
	}
	
	public boolean isAdminRole() {
		return adminRole;
	}

	public void setAdminRole(boolean adminRole) {
		this.adminRole = adminRole;
	}
	
	public String getUserPasswordModified() {
		return userPasswordModified;
	}

	public void setUserPasswordModified(String userPasswordModified) {
		this.userPasswordModified = userPasswordModified;
	}
	
	public Long getOnBehalfOf() {
		return onBehalfOf;
	}

	public void setOnBehalfOf(Long onBehalfOf) {
		this.onBehalfOf = onBehalfOf;
	}

	//----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    @Override
	public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(userKey);
        sb.append("]:"); 
        sb.append(userCode);
        sb.append("|");
        sb.append(userFirstName);
        sb.append("|");
        sb.append(userMiddleName);
        sb.append("|");
        sb.append(userLastName);
        sb.append("|");
        sb.append(userDisplayName);
        sb.append("|");
        sb.append(userCompanyKey);
        sb.append("|");
        sb.append(userAddressLink);
        sb.append("|");
        sb.append(userDefaultProfileKey);
        sb.append("|");
        sb.append(activeStatus);
        sb.append("|");
        sb.append(userActiveFrom);
        sb.append("|");
        sb.append(userActiveTo);
        sb.append("|");
        sb.append(userPassword);
        sb.append("|");
        sb.append(userPinKey);
        sb.append("|");
        sb.append(profileKey);
        sb.append("|");
        sb.append(lockKey);
        sb.append("|");
        sb.append(customerPinKey);
        sb.append("|");
        sb.append(commPhone);
        sb.append("|");
        sb.append(commMobile);
        sb.append("|");
        sb.append(commEmail);
        sb.append("|");
        sb.append(commCountryKey);
        sb.append("|");
        sb.append(commStateKey);
        sb.append("|");
        sb.append(commCityKey);
        sb.append("|");
        sb.append(commCountryName);
        sb.append("|");
        sb.append(commStateName);
        sb.append("|");
        sb.append(commCityName);
        sb.append("|");
        sb.append(userPasswordModified);
        sb.append("|");
        sb.append(onBehalfOf);
        return sb.toString(); 
    } 

}
