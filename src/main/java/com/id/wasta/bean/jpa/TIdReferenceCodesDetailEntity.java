
/*
 * Created on 1 Nov 2016 ( Time 10:40:35 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package com.id.wasta.bean.jpa;

import java.io.Serializable;
//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;
import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Version;

import org.hibernate.search.annotations.Analyze;
import org.hibernate.search.annotations.Field;
import org.hibernate.search.annotations.Index;
import org.hibernate.search.annotations.Store;

import com.fasterxml.jackson.annotation.JsonInclude;

/**
 * Persistent class for entity stored in table "t_id_reference_codes_detail"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="t_id_reference_codes_detail")
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="TIdReferenceCodesDetailEntity.countAll", query="SELECT COUNT(x) FROM TIdReferenceCodesDetailEntity x" )
} )
@JsonInclude(JsonInclude.Include.NON_NULL)
public class TIdReferenceCodesDetailEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="rcd_detail_key", nullable=false)
    private Long       rcdDetailKey ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="rcd_header_key", nullable=false)
		
     private Long       rcdHeaderKey ;

    @Column(name="rcd_value", nullable=false, length=50)
    @Field(index=Index.YES, analyze=Analyze.YES, store=Store.NO)
     private String     rcdValue     ;

    @Column(name="rcd_abbreviation", nullable=false, length=240)
    @Field(index=Index.YES, analyze=Analyze.YES, store=Store.NO)
     private String     rcdAbbreviation ;

    @Column(name="rcd_meaning", nullable=false, length=240)
		
     private String     rcdMeaning   ;

    @Column(name="rcd_low_range", nullable=false)
		
     private Long       rcdLowRange  ;

    @Column(name="rcd_high_range", nullable=false)
		
     private Long       rcdHighRange ;

    @Column(name="rcd_order_by", nullable=false)
		
     private Long       rcdOrderBy   ;

    @Column(name="rcd_set_as_default", length=1)
		
     private String     rcdSetAsDefault ;

    @Column(name="active_status", nullable=false, length=75)
		
     private String     activeStatus ;

    @Column(name="lock_key", nullable=false)
				@Version
		
     private Long       lockKey      ;

    @Column(name="profile_key", nullable=false)
		
     private Long       profileKey   ;

    @OneToMany(mappedBy="tIdReferenceCodesDetail", targetEntity=TIdCompanyContactLinkEntitySearch.class, cascade = CascadeType.ALL)
    private List<TIdCompanyContactLinkEntitySearch> listOfTIdCompanyContactLink;
    
    @OneToMany(mappedBy="tIdReferenceCodesDetail", targetEntity=TIdVisitInformationEntitySearch.class, cascade = CascadeType.ALL)
    private List<TIdVisitInformationEntitySearch> listOfTIdVisitInformation;
    
    @OneToMany(mappedBy="tIdReferenceCodesDetail2", targetEntity=TIdVisitInformationEntitySearch.class, cascade = CascadeType.ALL)
    private List<TIdVisitInformationEntitySearch> listOfTIdVisitInformation2;

    @OneToMany(mappedBy="tIdReferenceCodesDetail", targetEntity=TIdProfileAddressDetailsEntitySearch.class, cascade = CascadeType.ALL)
    private List<TIdProfileAddressDetailsEntitySearch> listOfTIdProfileAddressDetails;
    
    @OneToMany(mappedBy="tIdReferenceCodesDetail", targetEntity=TIdPersonalInformationEntitySearch.class, cascade = CascadeType.ALL)
    private List<TIdPersonalInformationEntitySearch> listOfTIdPersonalInformation;

    @OneToMany(mappedBy="tIdReferenceCodesDetail", targetEntity=TIdRelationshipInformationEntitySearch.class, cascade = CascadeType.ALL)
    private List<TIdRelationshipInformationEntitySearch> listOfTIdRelationshipInformation;

    @OneToMany(mappedBy="tIdReferenceCodesDetail", targetEntity=TIdExperienceInformationEntitySearch.class, cascade = CascadeType.ALL)
    private List<TIdExperienceInformationEntitySearch> listOfTIdExperienceInformation;

    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------

    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public TIdReferenceCodesDetailEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setRcdDetailKey( Long rcdDetailKey ) {
        this.rcdDetailKey = rcdDetailKey ;
    }
    public Long getRcdDetailKey() {
        return this.rcdDetailKey;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : rcd_header_key ( BIGINT ) 
    public void setRcdHeaderKey( Long rcdHeaderKey ) {
        this.rcdHeaderKey = rcdHeaderKey;
    }
    public Long getRcdHeaderKey() {
        return this.rcdHeaderKey;
    }

    //--- DATABASE MAPPING : rcd_value ( VARCHAR ) 
    public void setRcdValue( String rcdValue ) {
        this.rcdValue = rcdValue;
    }
    public String getRcdValue() {
        return this.rcdValue;
    }

    //--- DATABASE MAPPING : rcd_abbreviation ( VARCHAR ) 
    public void setRcdAbbreviation( String rcdAbbreviation ) {
        this.rcdAbbreviation = rcdAbbreviation;
    }
    public String getRcdAbbreviation() {
        return this.rcdAbbreviation;
    }

    //--- DATABASE MAPPING : rcd_meaning ( VARCHAR ) 
    public void setRcdMeaning( String rcdMeaning ) {
        this.rcdMeaning = rcdMeaning;
    }
    public String getRcdMeaning() {
        return this.rcdMeaning;
    }

    //--- DATABASE MAPPING : rcd_low_range ( BIGINT ) 
    public void setRcdLowRange( Long rcdLowRange ) {
        this.rcdLowRange = rcdLowRange;
    }
    public Long getRcdLowRange() {
        return this.rcdLowRange;
    }

    //--- DATABASE MAPPING : rcd_high_range ( BIGINT ) 
    public void setRcdHighRange( Long rcdHighRange ) {
        this.rcdHighRange = rcdHighRange;
    }
    public Long getRcdHighRange() {
        return this.rcdHighRange;
    }

    //--- DATABASE MAPPING : rcd_order_by ( BIGINT ) 
    public void setRcdOrderBy( Long rcdOrderBy ) {
        this.rcdOrderBy = rcdOrderBy;
    }
    public Long getRcdOrderBy() {
        return this.rcdOrderBy;
    }

    //--- DATABASE MAPPING : rcd_set_as_default ( VARCHAR ) 
    public void setRcdSetAsDefault( String rcdSetAsDefault ) {
        this.rcdSetAsDefault = rcdSetAsDefault;
    }
    public String getRcdSetAsDefault() {
        return this.rcdSetAsDefault;
    }

    //--- DATABASE MAPPING : active_status ( VARCHAR ) 
    public void setActiveStatus( String activeStatus ) {
        this.activeStatus = activeStatus;
    }
    public String getActiveStatus() {
        return this.activeStatus;
    }

    //--- DATABASE MAPPING : lock_key ( BIGINT ) 
    public void setLockKey( Long lockKey ) {
        this.lockKey = lockKey;
    }
    public Long getLockKey() {
        return this.lockKey;
    }

    //--- DATABASE MAPPING : profile_key ( BIGINT ) 
    public void setProfileKey( Long profileKey ) {
        this.profileKey = profileKey;
    }
    public Long getProfileKey() {
        return this.profileKey;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------

    public List<TIdVisitInformationEntitySearch> getListOfTIdVisitInformation() {
		return listOfTIdVisitInformation;
	}

	public void setListOfTIdVisitInformation(List<TIdVisitInformationEntitySearch> listOfTIdVisitInformation) {
		this.listOfTIdVisitInformation = listOfTIdVisitInformation;
	}
	
	public List<TIdVisitInformationEntitySearch> getListOfTIdVisitInformation2() {
		return listOfTIdVisitInformation2;
	}

	public void setListOfTIdVisitInformation2(
			List<TIdVisitInformationEntitySearch> listOfTIdVisitInformation2) {
		this.listOfTIdVisitInformation2 = listOfTIdVisitInformation2;
	}

	public List<TIdCompanyContactLinkEntitySearch> getListOfTIdCompanyContactLink() {
		return listOfTIdCompanyContactLink;
	}
	public void setListOfTIdCompanyContactLink(
			List<TIdCompanyContactLinkEntitySearch> listOfTIdCompanyContactLink) {
		this.listOfTIdCompanyContactLink = listOfTIdCompanyContactLink;
	}

	public List<TIdProfileAddressDetailsEntitySearch> getListOfTIdProfileAddressDetails() {
		return listOfTIdProfileAddressDetails;
	}

	public void setListOfTIdProfileAddressDetails(
			List<TIdProfileAddressDetailsEntitySearch> listOfTIdProfileAddressDetails) {
		this.listOfTIdProfileAddressDetails = listOfTIdProfileAddressDetails;
	}

	public List<TIdPersonalInformationEntitySearch> getListOfTIdPersonalInformation() {
		return listOfTIdPersonalInformation;
	}

	public void setListOfTIdPersonalInformation(List<TIdPersonalInformationEntitySearch> listOfTIdPersonalInformation) {
		this.listOfTIdPersonalInformation = listOfTIdPersonalInformation;
	}

	public List<TIdRelationshipInformationEntitySearch> getListOfTIdRelationshipInformation() {
		return listOfTIdRelationshipInformation;
	}

	public void setListOfTIdRelationshipInformation(
			List<TIdRelationshipInformationEntitySearch> listOfTIdRelationshipInformation) {
		this.listOfTIdRelationshipInformation = listOfTIdRelationshipInformation;
	}

	public List<TIdExperienceInformationEntitySearch> getListOfTIdExperienceInformation() {
		return listOfTIdExperienceInformation;
	}
	public void setListOfTIdExperienceInformation(
			List<TIdExperienceInformationEntitySearch> listOfTIdExperienceInformation) {
		this.listOfTIdExperienceInformation = listOfTIdExperienceInformation;
	}
	
	//----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(rcdDetailKey);
        sb.append("]:"); 
        sb.append(rcdHeaderKey);
        sb.append("|");
        sb.append(rcdValue);
        sb.append("|");
        sb.append(rcdAbbreviation);
        sb.append("|");
        sb.append(rcdMeaning);
        sb.append("|");
        sb.append(rcdLowRange);
        sb.append("|");
        sb.append(rcdHighRange);
        sb.append("|");
        sb.append(rcdOrderBy);
        sb.append("|");
        sb.append(rcdSetAsDefault);
        sb.append("|");
        sb.append(activeStatus);
        sb.append("|");
        sb.append(lockKey);
        sb.append("|");
        sb.append(profileKey);
        return sb.toString(); 
    } 

}
