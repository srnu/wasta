
/*
 * Created on 1 Nov 2016 ( Time 10:40:35 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package com.id.wasta.bean.jpa;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;
import javax.persistence.Version;

import com.fasterxml.jackson.annotation.JsonInclude;

/**
 * Persistent class for entity stored in table "t_id_reference_codes_header"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="t_id_reference_codes_header")
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="TIdReferenceCodesHeaderEntity.countAll", query="SELECT COUNT(x) FROM TIdReferenceCodesHeaderEntity x" )
} )
@JsonInclude(JsonInclude.Include.NON_NULL)
public class TIdReferenceCodesHeaderEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="rch_header_key", nullable=false)
    private Long       rchHeaderKey ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="rch_module_key", nullable=false)
		
     private Long       rchModuleKey ;

    @Column(name="rch_domain_name", nullable=false, length=240)
		
     private String     rchDomainName ;

    @Column(name="rch_domain_type", nullable=false, length=1)
		
     private String     rchDomainType ;

    @Column(name="rch_definition_base", nullable=false, length=1)
		
     private String     rchDefinitionBase ;

    @Column(name="rch_description", length=240)
		
     private String     rchDescription ;

    @Column(name="profile_key", nullable=false)
		
     private Long       profileKey   ;

    @Column(name="lock_key", nullable=false)
				@Version
		
     private Long       lockKey      ;

    @Column(name="active_status", nullable=false, length=75)
		
     private String     activeStatus ;



    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------

    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public TIdReferenceCodesHeaderEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setRchHeaderKey( Long rchHeaderKey ) {
        this.rchHeaderKey = rchHeaderKey ;
    }
    public Long getRchHeaderKey() {
        return this.rchHeaderKey;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : rch_module_key ( BIGINT ) 
    public void setRchModuleKey( Long rchModuleKey ) {
        this.rchModuleKey = rchModuleKey;
    }
    public Long getRchModuleKey() {
        return this.rchModuleKey;
    }

    //--- DATABASE MAPPING : rch_domain_name ( VARCHAR ) 
    public void setRchDomainName( String rchDomainName ) {
        this.rchDomainName = rchDomainName;
    }
    public String getRchDomainName() {
        return this.rchDomainName;
    }

    //--- DATABASE MAPPING : rch_domain_type ( VARCHAR ) 
    public void setRchDomainType( String rchDomainType ) {
        this.rchDomainType = rchDomainType;
    }
    public String getRchDomainType() {
        return this.rchDomainType;
    }

    //--- DATABASE MAPPING : rch_definition_base ( VARCHAR ) 
    public void setRchDefinitionBase( String rchDefinitionBase ) {
        this.rchDefinitionBase = rchDefinitionBase;
    }
    public String getRchDefinitionBase() {
        return this.rchDefinitionBase;
    }

    //--- DATABASE MAPPING : rch_description ( VARCHAR ) 
    public void setRchDescription( String rchDescription ) {
        this.rchDescription = rchDescription;
    }
    public String getRchDescription() {
        return this.rchDescription;
    }

    //--- DATABASE MAPPING : profile_key ( BIGINT ) 
    public void setProfileKey( Long profileKey ) {
        this.profileKey = profileKey;
    }
    public Long getProfileKey() {
        return this.profileKey;
    }

    //--- DATABASE MAPPING : lock_key ( BIGINT ) 
    public void setLockKey( Long lockKey ) {
        this.lockKey = lockKey;
    }
    public Long getLockKey() {
        return this.lockKey;
    }

    //--- DATABASE MAPPING : active_status ( VARCHAR ) 
    public void setActiveStatus( String activeStatus ) {
        this.activeStatus = activeStatus;
    }
    public String getActiveStatus() {
        return this.activeStatus;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------

    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(rchHeaderKey);
        sb.append("]:"); 
        sb.append(rchModuleKey);
        sb.append("|");
        sb.append(rchDomainName);
        sb.append("|");
        sb.append(rchDomainType);
        sb.append("|");
        sb.append(rchDefinitionBase);
        sb.append("|");
        sb.append(rchDescription);
        sb.append("|");
        sb.append(profileKey);
        sb.append("|");
        sb.append(lockKey);
        sb.append("|");
        sb.append(activeStatus);
        return sb.toString(); 
    } 

}
