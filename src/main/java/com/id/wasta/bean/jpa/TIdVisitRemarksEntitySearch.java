/*
 * Created on 16 Oct 2017 ( Time 10:48:48 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 */
// This Bean has a basic Primary Key (not composite) 

package com.id.wasta.bean.jpa;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;
import javax.persistence.Version;

import org.hibernate.search.annotations.Analyze;
import org.hibernate.search.annotations.Field;
import org.hibernate.search.annotations.Index;
import org.hibernate.search.annotations.Store;

/**
 * Persistent class for entity stored in table "t_id_visit_remarks"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name = "t_id_visit_remarks")
// Define named queries here
@NamedQueries({ @NamedQuery(name = "TIdVisitRemarksEntitySearch.countAll", query = "SELECT COUNT(x) FROM TIdVisitRemarksEntitySearch x") })
public class TIdVisitRemarksEntitySearch implements Serializable {

	private static final long serialVersionUID = 1L;

	// ----------------------------------------------------------------------
	// ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
	// ----------------------------------------------------------------------
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "pivr_key", nullable = false)
	private Long pivrKey;

	// ----------------------------------------------------------------------
	// ENTITY DATA FIELDS
	/*
	 * //----------------------------------------------------------------------
	 * 
	 * @Column(name="pivr_piv_key", nullable=false)
	 * 
	 * private Long pivrPivKey ;
	 */

	@Column(name = "pivr_visit_notes", nullable = false, length = 600)
	@Field(index=Index.YES, analyze=Analyze.YES, store=Store.NO)
	private String pivrVisitNotes;

	@Column(name = "active_status", length = 75)
	private String activeStatus;

	@Column(name = "lock_key", nullable = false)
	@Version
	private Long lockKey;

	@Column(name = "profile_key", nullable = false)
	private Long profileKey;

	// ----------------------------------------------------------------------
	// ENTITY LINKS ( RELATIONSHIP )
	// ----------------------------------------------------------------------

	@ManyToOne
	@JoinColumn(name = "pivr_piv_key", referencedColumnName = "piv_key")
	private TIdVisitInformationEntitySearch tIdVisitInformationSearch;

	// ----------------------------------------------------------------------
	// CONSTRUCTOR(S)
	// ----------------------------------------------------------------------
	public TIdVisitRemarksEntitySearch() {
		super();
	}

	// ----------------------------------------------------------------------
	// GETTER & SETTER FOR THE KEY FIELD
	// ----------------------------------------------------------------------
	public void setPivrKey(Long pivrKey) {
		this.pivrKey = pivrKey;
	}

	public Long getPivrKey() {
		return this.pivrKey;
	}

	// ----------------------------------------------------------------------
	// GETTERS & SETTERS FOR FIELDS
	// ----------------------------------------------------------------------
	// --- DATABASE MAPPING : pivr_piv_key ( BIGINT )
	/*
	 * public void setPivrPivKey( Long pivrPivKey ) { this.pivrPivKey =
	 * pivrPivKey; } public Long getPivrPivKey() { return this.pivrPivKey; }
	 */

	// --- DATABASE MAPPING : pivr_visit_notes ( VARCHAR )
	public void setPivrVisitNotes(String pivrVisitNotes) {
		this.pivrVisitNotes = pivrVisitNotes;
	}

	public String getPivrVisitNotes() {
		return this.pivrVisitNotes;
	}

	// --- DATABASE MAPPING : active_status ( VARCHAR )
	public void setActiveStatus(String activeStatus) {
		this.activeStatus = activeStatus;
	}

	public String getActiveStatus() {
		return this.activeStatus;
	}

	// --- DATABASE MAPPING : lock_key ( BIGINT )
	public void setLockKey(Long lockKey) {
		this.lockKey = lockKey;
	}

	public Long getLockKey() {
		return this.lockKey;
	}

	// --- DATABASE MAPPING : profile_key ( BIGINT )
	public void setProfileKey(Long profileKey) {
		this.profileKey = profileKey;
	}

	public Long getProfileKey() {
		return this.profileKey;
	}

	// ----------------------------------------------------------------------
	// GETTERS & SETTERS FOR LINKS
	// ----------------------------------------------------------------------

	public TIdVisitInformationEntitySearch gettIdVisitInformationSearch() {
		return tIdVisitInformationSearch;
	}

	public void settIdVisitInformationSearch(
			TIdVisitInformationEntitySearch tIdVisitInformationSearch) {
		this.tIdVisitInformationSearch = tIdVisitInformationSearch;
	}

	// ----------------------------------------------------------------------
	// toString METHOD
	// ----------------------------------------------------------------------
	public String toString() {
		StringBuffer sb = new StringBuffer();
		sb.append("[");
		sb.append(pivrKey);
		sb.append("]:");
		/*
		 * sb.append(pivrPivKey); sb.append("|");
		 */
		sb.append(pivrVisitNotes);
		sb.append("|");
		sb.append(activeStatus);
		sb.append("|");
		sb.append(lockKey);
		sb.append("|");
		sb.append(profileKey);
		return sb.toString();
	}

}
