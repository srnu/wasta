
/*
 * Created on 20 Feb 2017 ( Time 18:43:48 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package com.id.wasta.bean.jpa;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;
import javax.persistence.Version;

import org.hibernate.search.annotations.IndexedEmbedded;

/**
 * Persistent class for entity stored in table "t_id_recreation_info"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="t_id_recreation_info")
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="TIdRecreationInfoEntitySearch.countAll", query="SELECT COUNT(x) FROM TIdRecreationInfoEntitySearch x" )
} )
public class TIdRecreationInfoEntitySearch implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="rei_key", nullable=false)
    private Long       reiKey       ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    


    @Column(name="rei_rm_others", length=75)
		
     private String     reiRmOthers  ;

    @Column(name="profile_key", nullable=false)
		
     private Long       profileKey   ;

    @Column(name="lock_key", nullable=false)
				@Version
		
     private Long       lockKey      ;

    @Column(name="active_status", nullable=false, length=75)
		
     private String     activeStatus ;

    @ManyToOne
    @JoinColumn(name="rei_pin_key", referencedColumnName="pin_key")
    private TIdPersonalInformationEntitySearch tIdPersonalInformation;
    
    @IndexedEmbedded
	@ManyToOne
    @JoinColumn(name="rei_rm_key", referencedColumnName="rm_key")
    private TIdRecreationMasterEntitySearch tIdRecreationMaster;
    
    @Column(name = "rei_created_by")
    private Long     reiCreatedBy;

    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------

    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public TIdRecreationInfoEntitySearch() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setReiKey( Long reiKey ) {
        this.reiKey = reiKey ;
    }
    public Long getReiKey() {
        return this.reiKey;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------

  

    //--- DATABASE MAPPING : rei_rm_others ( VARCHAR ) 
    public void setReiRmOthers( String reiRmOthers ) {
        this.reiRmOthers = reiRmOthers;
    }
    public String getReiRmOthers() {
        return this.reiRmOthers;
    }

    //--- DATABASE MAPPING : profile_key ( BIGINT ) 
    public void setProfileKey( Long profileKey ) {
        this.profileKey = profileKey;
    }
    public Long getProfileKey() {
        return this.profileKey;
    }

    //--- DATABASE MAPPING : lock_key ( BIGINT ) 
    public void setLockKey( Long lockKey ) {
        this.lockKey = lockKey;
    }
    public Long getLockKey() {
        return this.lockKey;
    }

    //--- DATABASE MAPPING : active_status ( VARCHAR ) 
    public void setActiveStatus( String activeStatus ) {
        this.activeStatus = activeStatus;
    }
    public String getActiveStatus() {
        return this.activeStatus;
    }
    public TIdPersonalInformationEntitySearch gettIdPersonalInformation() {
		return tIdPersonalInformation;
	}

	public void settIdPersonalInformation(TIdPersonalInformationEntitySearch tIdPersonalInformation) {
		this.tIdPersonalInformation = tIdPersonalInformation;
	}

	public TIdRecreationMasterEntitySearch gettIdRecreationMaster() {
		return tIdRecreationMaster;
	}

	public void settIdRecreationMaster(TIdRecreationMasterEntitySearch tIdRecreationMaster) {
		this.tIdRecreationMaster = tIdRecreationMaster;
	}
	
	


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------

    public Long getReiCreatedBy() {
		return reiCreatedBy;
	}

	public void setReiCreatedBy(Long reiCreatedBy) {
		this.reiCreatedBy = reiCreatedBy;
	}

	//----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(reiKey);
        sb.append("]:"); 
        sb.append(reiRmOthers);
        sb.append("|");
        sb.append(profileKey);
        sb.append("|");
        sb.append(lockKey);
        sb.append("|");
        sb.append(activeStatus);
        sb.append("|");
        sb.append(reiCreatedBy);
        return sb.toString(); 
    } 

}
