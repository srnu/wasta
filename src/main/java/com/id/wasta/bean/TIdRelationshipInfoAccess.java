

/*
 * Created on 25 Apr 2019 ( Time 16:50:41 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 */
// This Bean has a composite Primary Key  
// This Bean has a basic Primary Key (not composite) 

package com.id.wasta.bean;

import java.io.Serializable;

//import org.hibernate.validator.constraints.* ;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

public class TIdRelationshipInfoAccess implements Serializable {

    private static final long serialVersionUID = 1L;

    @NotNull
    private Long       riaKey       ;

    @NotNull 
    private Long       riaPrlkKey    ;

    @Size( max = 30 ) 
     private String     riaRelationship ;

    @NotNull
    @Size( min = 1, max = 20 ) 
     private String     riaShareType ;

    @NotNull
    @Size( min = 1, max = 20 ) 
     private String     riaAccessType ;

    @NotNull
    @Size( min = 1, max = 2250 ) 
     private String     riaAccessInfo ;

    @NotNull 
     private Long       createdBy    ;

    @NotNull
    @Size( min = 1, max = 1 ) 
     private String     activeStatus ;

    @NotNull 
     private Long       lockKey      ;



  
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setRiaKey( Long riaKey ) {
        this.riaKey = riaKey ;
    }
    public Long getRiaKey() {
        return this.riaKey;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : ria_prlk_key ( BIGINT ) 
    public Long getRiaPrlkKey() {
		return riaPrlkKey;
	}
	public void setRiaPrlkKey(Long riaPrlkKey) {
		this.riaPrlkKey = riaPrlkKey;
	}

    //--- DATABASE MAPPING : ria_relationship ( VARCHAR ) 
    public void setRiaRelationship( String riaRelationship ) {
        this.riaRelationship = riaRelationship;
    }
	public String getRiaRelationship() {
        return this.riaRelationship;
    }

    //--- DATABASE MAPPING : ria_share_type ( VARCHAR ) 
    public void setRiaShareType( String riaShareType ) {
        this.riaShareType = riaShareType;
    }
    public String getRiaShareType() {
        return this.riaShareType;
    }

    //--- DATABASE MAPPING : ria_access_type ( VARCHAR ) 
    public void setRiaAccessType( String riaAccessType ) {
        this.riaAccessType = riaAccessType;
    }
    public String getRiaAccessType() {
        return this.riaAccessType;
    }

    //--- DATABASE MAPPING : ria_access_info ( VARCHAR ) 
    public void setRiaAccessInfo( String riaAccessInfo ) {
        this.riaAccessInfo = riaAccessInfo;
    }
    public String getRiaAccessInfo() {
        return this.riaAccessInfo;
    }

    //--- DATABASE MAPPING : created_by ( BIGINT ) 
    public void setCreatedBy( Long createdBy ) {
        this.createdBy = createdBy;
    }
    public Long getCreatedBy() {
        return this.createdBy;
    }

    //--- DATABASE MAPPING : active_status ( VARCHAR ) 
    public void setActiveStatus( String activeStatus ) {
        this.activeStatus = activeStatus;
    }
    public String getActiveStatus() {
        return this.activeStatus;
    }

    //--- DATABASE MAPPING : lock_key ( BIGINT ) 
    public void setLockKey( Long lockKey ) {
        this.lockKey = lockKey;
    }
    public Long getLockKey() {
        return this.lockKey;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------

    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(riaKey);
        sb.append("]:"); 
        sb.append(riaPrlkKey);
        sb.append("|");
        sb.append(riaRelationship);
        sb.append("|");
        sb.append(riaShareType);
        sb.append("|");
        sb.append(riaAccessType);
        sb.append("|");
        sb.append(riaAccessInfo);
        sb.append("|");
        sb.append(createdBy);
        sb.append("|");
        sb.append(activeStatus);
        sb.append("|");
        sb.append(lockKey);
        return sb.toString(); 
    } 

}

